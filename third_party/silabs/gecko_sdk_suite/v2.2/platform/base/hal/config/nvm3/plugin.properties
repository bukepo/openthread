name=NVM3 Library
description=The NVM3 provides a means to store and retrieve objects (key/value pair) from the flash and provides wear leveling to reduce erase and write cycles to maximise the lifetime of the flash pages. Objects in NVM3 can either be accessed directly through the native NVM3 API or through the token API in the same way as SimEE1 or SimEE2 based tokens. The NVM3 instance used by this plugin takes up 36KB of flash. This plugin is beta tested only. Silicon Labs will NOT support any production deployments with this Beta release.  Production deployments will only be supported with the GA version of NVM3.  This version is intended for lab and evaluation purpose only.
category=HAL

qualityString=Beta Release
quality=development

architecture=efr32, simulation

providedApis=nvm3, token-storage

api.nvm3.header= $HAL/plugin/nvm3/nvm3-token.h

libraryFiles(efr32+iar)=$EMDRV/nvm3/lib/libnvm3_CM4_iar.a
libraryFiles(efr32+gcc)=$EMDRV/nvm3/lib/libnvm3_CM4_gcc.a

$EMDRV/nvm3/src/nvm3_default.c    (efr32)
$EMDRV/nvm3/src/nvm3_hal_flash.c  (efr32)
$EMDRV/nvm3/src/nvm3_lock.c

setup(additionalFiles) {
  PATH(ABSOLUTE):$EMDRV/nvm3/inc
  PATH(ABSOLUTE):$EMDRV/nvm3/config
}

options=defaultInstanceCacheSize

defaultInstanceCacheSize.name=Default NVM3 Instance Cache Size
defaultInstanceCacheSize.description= Number of NVM3 objects to cache for the default NVM3 instance. To reduce access times this number should be equal to or higher than the number of NVM3 objects in the default NVM3 instance, including tokens.
defaultInstanceCacheSize.type=NUMBER
defaultInstanceCacheSize.macro=-DNVM3_DEFAULT_CACHE_SIZE
defaultInstanceCacheSize.default=100

setup(macros) {
    -DUSE_NVM3
  }

setup(template) {
  simeepromSize=36864
}
